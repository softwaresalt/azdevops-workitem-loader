# Azure DevOps Work Item Loader Configuration
# This file contains all configuration parameters for the work item loader script

# Azure DevOps Configuration
azure_devops:
  # Azure DevOps organization URL (e.g., https://dev.azure.com/myorg)
  organization_url: "https://dev.azure.com/<ORGANIZATION>"
  
  # Azure DevOps project name
  project: "<PROJECT_NAME>"
  
  # Area path for work items (usually the project name)
  area_path: "<AREA_PATH>"
  
  # Iteration path for work items (usually the project name)
  iteration_path: "Work-Item-Loader-Agile"
  
  # Personal Access Token for authentication
  # To create a PAT: Go to {organization_url}/_usersSettings/tokens
  # Required scopes: Work Items (Read & Write)
  # SECURITY NOTE: Keep this token secure and never commit it to version control
  personal_access_token: "<YOUR_TOKEN_HERE>"

# File Paths Configuration
file_paths:
  # Path to the YAML file containing work items to import
  # Can be absolute path or relative to script directory
  yaml_file_path: "C:\\Source\\Customer\\Projects\\Project-ACME\\backlog-yml\\product.backlog.yaml"

  # Optional: Path to template file for custom field definitions
  # Can be absolute path or relative to script directory
  # Set to null or remove to use default fields only
  template_file_path: "C:\\Source\\Customer\\Projects\\Project-ACME\\templates.yaml"
  # template_file_path: null  # Uncomment to disable templates

# Optional: Environment Variables
# You can also use environment variables instead of hardcoded values
# Supported environment variables:
# - AZURE_DEVOPS_PAT: Personal Access Token
# - YAML_FILE_PATH: Path to work items YAML file
# - TEMPLATE_FILE_PATH: Path to template file
environment_variables:
  use_env_for_pat: false  # Set to true to use AZURE_DEVOPS_PAT environment variable
  use_env_for_yaml_path: false  # Set to true to use YAML_FILE_PATH environment variable
  use_env_for_template_path: false  # Set to true to use TEMPLATE_FILE_PATH environment variable

# Formatting Options
formatting:
  # Enable Markdown to HTML conversion for description and acceptance criteria fields
  # Requires 'markdown' package: pip install markdown
  # When enabled, Markdown syntax in descriptions will be converted to HTML for rich formatting
  enable_markdown: true  # Set to true to enable Markdown support
